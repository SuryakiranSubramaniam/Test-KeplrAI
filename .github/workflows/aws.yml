name: Deploy to EC2 via SSM

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::558245564262:role/GitHubDeployRole
          aws-region: us-west-2

      - name: Create file locally
        run: |
          echo "Hello from GitHub Actions" > testfile.txt
          cat testfile.txt

      - name: Get EC2 instance ID
        id: get_instance
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=Test-ec2" "Name=instance-state-name,Values=running" \
            --query "Reservations[0].Instances[0].InstanceId" \
            --output text)
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
          echo "Instance ID: $INSTANCE_ID"

      - name: Upload build to S3
        run: |
          aws s3 cp test.tar s3://testbucket123surya-123/test.tar

      - name: Deploy build to EC2 via SSM
        run: |
          # Send command to EC2 to download from S3 and extract
          COMMAND_ID=$(aws ssm send-command \
            --targets "Key=instanceIds,Values=$INSTANCE_ID" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy build" \
            --parameters 'commands=[
              "mkdir -p /tmp/fd",
              "aws s3 cp s3://testbucket123surya-123/test.tar /tmp/test.tar",
              "tar -xzf /tmp/test.tar -C /tmp/fd"
            ]' \
            --query "Command.CommandId" \
            --output text)

          echo "Waiting for SSM command $COMMAND_ID to complete..."
          aws ssm wait command-executed \
            --command-id $COMMAND_ID \
            --instance-id $INSTANCE_ID

          # Optional: Check output
          aws ssm get-command-invocation \
            --command-id $COMMAND_ID \
            --instance-id $INSTANCE_ID

      - name: Copy testfile.txt to EC2 via SSM
        run: |
          COMMAND_ID=$(aws ssm send-command \
            --targets "Key=instanceIds,Values=$INSTANCE_ID" \
            --document-name "AWS-RunShellScript" \
            --comment "Copy testfile.txt to /tmp" \
            --parameters 'commands=[
              "cat > /tmp/testfile.txt <<EOF
'"$(cat testfile.txt)"'
EOF"
            ]' \
            --query "Command.CommandId" \
            --output text)

          echo "Waiting for SSM command $COMMAND_ID to complete..."
          aws ssm wait command-executed \
            --command-id $COMMAND_ID \
            --instance-id $INSTANCE_ID

          aws ssm get-command-invocation \
            --command-id $COMMAND_ID \
            --instance-id $INSTANCE_ID
